/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */


import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.time.LocalDate;
import java.time.Period;
import java.time.format.DateTimeFormatter;
import javax.swing.JOptionPane;

/**
 *
 * @author ASUS
 */
public class Kuis_2 extends javax.swing.JFrame {

    /**
     * Creates new form Kuis_2
     */
    public Kuis_2() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        nikText = new javax.swing.JTextField();
        namaText = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        lakiRB = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        renangCheckBox = new javax.swing.JCheckBox();
        membacaCheckBox = new javax.swing.JCheckBox();
        noTelpText = new javax.swing.JTextField();
        tglLahirFormattedText = new javax.swing.JFormattedTextField();
        pendidikanComboBox = new javax.swing.JComboBox<>();
        ipkFormattedText = new javax.swing.JFormattedTextField();
        daftarButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("NIK");

        jLabel2.setText("Nama");

        jLabel3.setText("Alamat");

        jLabel4.setText("Jenis Kelamin");

        jLabel5.setText("Hobby");

        jLabel6.setText("No Telp");

        jLabel7.setText("Tanggal Lahir");

        jLabel8.setText("Pendidikan");

        jLabel9.setText("IPK");

        namaText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                namaTextActionPerformed(evt);
            }
        });

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        buttonGroup1.add(lakiRB);
        lakiRB.setText("Laki-laki");
        lakiRB.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lakiRBActionPerformed(evt);
            }
        });

        buttonGroup1.add(jRadioButton2);
        jRadioButton2.setText("Perempuan");

        renangCheckBox.setText("Renang");
        renangCheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                renangCheckBoxActionPerformed(evt);
            }
        });

        membacaCheckBox.setText("Membaca");

        noTelpText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                noTelpTextActionPerformed(evt);
            }
        });
        noTelpText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                noTelpTextKeyReleased(evt);
            }
        });

        tglLahirFormattedText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tglLahirFormattedTextActionPerformed(evt);
            }
        });
        tglLahirFormattedText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tglLahirFormattedTextKeyReleased(evt);
            }
        });

        pendidikanComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "SD", "SMP", "SMA", "D1", "D2", "D3", "D4/S1", "S2", "S3" }));
        pendidikanComboBox.setSelectedIndex(-1);
        pendidikanComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pendidikanComboBoxActionPerformed(evt);
            }
        });
        pendidikanComboBox.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                pendidikanComboBoxKeyReleased(evt);
            }
        });

        ipkFormattedText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ipkFormattedTextActionPerformed(evt);
            }
        });
        ipkFormattedText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                ipkFormattedTextKeyReleased(evt);
            }
        });

        daftarButton.setText("Daftar");
        daftarButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                daftarButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8)
                    .addComponent(jLabel9))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(daftarButton)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(nikText)
                        .addComponent(namaText, javax.swing.GroupLayout.DEFAULT_SIZE, 281, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lakiRB)
                        .addGap(18, 18, 18)
                        .addComponent(jRadioButton2))
                    .addComponent(renangCheckBox)
                    .addComponent(membacaCheckBox)
                    .addComponent(noTelpText, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(pendidikanComboBox, javax.swing.GroupLayout.Alignment.LEADING, 0, 172, Short.MAX_VALUE)
                        .addComponent(tglLahirFormattedText, javax.swing.GroupLayout.Alignment.LEADING))
                    .addComponent(ipkFormattedText, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(16, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(nikText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(namaText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(lakiRB)
                    .addComponent(jRadioButton2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(renangCheckBox))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(membacaCheckBox)
                .addGap(1, 1, 1)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(noTelpText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(tglLahirFormattedText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(pendidikanComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(ipkFormattedText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(daftarButton)
                .addContainerGap(13, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>                        

    private void namaTextActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // TODO add your handling code here:
    }                                        

    private void lakiRBActionPerformed(java.awt.event.ActionEvent evt) {                                       

    }                                      

    private void renangCheckBoxActionPerformed(java.awt.event.ActionEvent evt) {                                               
        // TODO add your handling code here:
    }                                              

    private void daftarButtonActionPerformed(java.awt.event.ActionEvent evt) {                                             
    daftarButton.addActionListener(new java.awt.event.ActionListener() {
    public void actionPerformed(java.awt.event.ActionEvent evt) {
        // Asumsikan semua pengecekan dilakukan di event-event sebelumnya
        if (isAllInputValid()) {
            JOptionPane.showMessageDialog(null, "Anda berhasil mendaftar");
            clearForm(); // Mengosongkan form
        }
    }

    private boolean isAllInputValid() {
        // Lakukan pengecekan apakah semua field sudah valid
        // Misal: Cek apakah field NIK, Nama, dll. sudah diisi
        // Implementasi tambahan jika diperlukan
        return true; // Kembalikan true jika semua input valid
    }

    private void clearForm() {
        nikText.setText("");
        namaText.setText("");
        jTextArea1.setText("");
        buttonGroup1.clearSelection();
        renangCheckBox.setSelected(false);
        membacaCheckBox.setSelected(false);
        noTelpText.setText("");
        tglLahirFormattedText.setText("");
        pendidikanComboBox.setSelectedIndex(-1);
        ipkFormattedText.setText("");
    }
});

    }                                            

    private void noTelpTextActionPerformed(java.awt.event.ActionEvent evt) {                                           
noTelpText.addKeyListener(new java.awt.event.KeyAdapter() {
    public void keyTyped(java.awt.event.KeyEvent evt) {
        char c = evt.getKeyChar();
        if (!Character.isDigit(c)) {
            evt.consume(); // Abaikan input jika bukan angka
        }
    }
});

    }                                          

    private void tglLahirFormattedTextActionPerformed(java.awt.event.ActionEvent evt) {                                                      
tglLahirFormattedText.addFocusListener(new java.awt.event.FocusAdapter() {
    @Override
    public void focusLost(java.awt.event.FocusEvent evt) {
        try {
            String tanggalLahir = tglLahirFormattedText.getText();
            LocalDate birthDate = LocalDate.parse(tanggalLahir, DateTimeFormatter.ofPattern("dd/MM/yyyy"));
            LocalDate now = LocalDate.now();
            Period age = Period.between(birthDate, now);
            if (age.getYears() < 18) {
                JOptionPane.showMessageDialog(null, "Anda belum cukup umur untuk melamar pekerjaan ini");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Format tanggal tidak valid. Gunakan format dd/MM/yyyy.");
        }
    }
});


    }                                                     

    private void ipkFormattedTextActionPerformed(java.awt.event.ActionEvent evt) {                                                 
    ipkFormattedText.addFocusListener(new java.awt.event.FocusAdapter() {
    public void focusLost(java.awt.event.FocusEvent evt) {
        try {
            double ipk = Double.parseDouble(ipkFormattedText.getText());
            if (ipk < 0.00 || ipk > 4.00) {
                JOptionPane.showMessageDialog(null, "IPK tidak valid");
            } else if (ipk < 3.01) {
                JOptionPane.showMessageDialog(null, "IPK minimal 3,01");
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "IPK tidak valid");
        }
    }
});

    }                                                

    private void pendidikanComboBoxActionPerformed(java.awt.event.ActionEvent evt) {                                                   
     pendidikanComboBox.addActionListener(new ActionListener() {
    @Override
    public void actionPerformed(ActionEvent evt) {
        String selectedPendidikan = (String) pendidikanComboBox.getSelectedItem();
        if (selectedPendidikan != null && (selectedPendidikan.equals("SD") || selectedPendidikan.equals("SMP") || selectedPendidikan.equals("SMA"))) {
            JOptionPane.showMessageDialog(null, "Minimal pendidikan adalah D1");
        }
    }
});

    }                                                  

    private void noTelpTextKeyReleased(java.awt.event.KeyEvent evt) {                                       
             noTelpText.addKeyListener(new java.awt.event.KeyAdapter() {
    public void keyTyped(java.awt.event.KeyEvent evt) {
        char c = evt.getKeyChar();
        if (!Character.isDigit(c)) {
            evt.consume(); // Abaikan input jika bukan angka
        }
    }
});
    }                                      

    private void tglLahirFormattedTextKeyReleased(java.awt.event.KeyEvent evt) {                                                  
tglLahirFormattedText.addFocusListener(new java.awt.event.FocusAdapter() {
    @Override
    public void focusLost(java.awt.event.FocusEvent evt) {
        try {
            String tanggalLahir = tglLahirFormattedText.getText();
            LocalDate birthDate = LocalDate.parse(tanggalLahir, DateTimeFormatter.ofPattern("dd/MM/yyyy"));
            LocalDate now = LocalDate.now();
            Period age = Period.between(birthDate, now);
            if (age.getYears() < 18) {
                JOptionPane.showMessageDialog(null, "Anda belum cukup umur untuk melamar pekerjaan ini");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Format tanggal tidak valid. Gunakan format dd/MM/yyyy.");
        }
    }
});
    }                                                 

    private void pendidikanComboBoxKeyReleased(java.awt.event.KeyEvent evt) {                                               
          pendidikanComboBox.addActionListener(new ActionListener() {
    @Override
    public void actionPerformed(ActionEvent evt) {
        String selectedPendidikan = (String) pendidikanComboBox.getSelectedItem();
        if (selectedPendidikan != null && (selectedPendidikan.equals("SD") || selectedPendidikan.equals("SMP") || selectedPendidikan.equals("SMA"))) {
            JOptionPane.showMessageDialog(null, "Minimal pendidikan adalah D1");
        }
    }
});
    }                                              

    private void ipkFormattedTextKeyReleased(java.awt.event.KeyEvent evt) {                                             
         ipkFormattedText.addFocusListener(new java.awt.event.FocusAdapter() {
    public void focusLost(java.awt.event.FocusEvent evt) {
        try {
            double ipk = Double.parseDouble(ipkFormattedText.getText());
            if (ipk < 0.00 || ipk > 4.00) {
                JOptionPane.showMessageDialog(null, "IPK tidak valid");
            } else if (ipk < 3.01) {
                JOptionPane.showMessageDialog(null, "IPK minimal 3,01");
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "IPK tidak valid");
        }
    }
});
    }                                            

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Kuis_2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Kuis_2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Kuis_2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Kuis_2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Kuis_2().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify                     
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton daftarButton;
    private javax.swing.JFormattedTextField ipkFormattedText;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JRadioButton lakiRB;
    private javax.swing.JCheckBox membacaCheckBox;
    private javax.swing.JTextField namaText;
    private javax.swing.JTextField nikText;
    private javax.swing.JTextField noTelpText;
    private javax.swing.JComboBox<String> pendidikanComboBox;
    private javax.swing.JCheckBox renangCheckBox;
    private javax.swing.JFormattedTextField tglLahirFormattedText;
    // End of variables declaration                   
}
